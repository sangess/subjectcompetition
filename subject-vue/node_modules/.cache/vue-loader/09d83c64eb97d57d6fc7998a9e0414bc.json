{"remainingRequest":"D:\\IDEA_workspace2\\subject-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\IDEA_workspace2\\subject-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\IDEA_workspace2\\subject-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IDEA_workspace2\\subject-vue\\src\\views\\college\\college_comp_add.vue?vue&type=template&id=49350c2b&","dependencies":[{"path":"D:\\IDEA_workspace2\\subject-vue\\src\\views\\college\\college_comp_add.vue","mtime":1621930334485},{"path":"D:\\IDEA_workspace2\\subject-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_workspace2\\subject-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\IDEA_workspace2\\subject-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_workspace2\\subject-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { attrs: { id: \"admin_comp_add\" } },\n    [\n      _c(\"el-card\", { staticStyle: { width: \"100%\", height: \"1200px\" } }, [\n        _c(\n          \"div\",\n          { attrs: { slot: \"header\" }, slot: \"header\" },\n          [\n            _c(\n              \"el-button\",\n              {\n                staticStyle: { float: \"left\" },\n                attrs: { type: \"default\", icon: \"el-icon-arrow-left\" },\n                on: {\n                  click: function($event) {\n                    return _vm.$router.back(-1)\n                  }\n                }\n              },\n              [_vm._v(\"返回\")]\n            )\n          ],\n          1\n        ),\n        _c(\n          \"div\",\n          { staticStyle: { \"text-align\": \"center\" } },\n          [\n            _c(\"div\", [\n              _c(\"h1\", { staticStyle: { \"font-size\": \"28px\" } }, [\n                _vm._v(\"申请添加新竞赛\")\n              ])\n            ]),\n            _c(\"el-col\", { attrs: { span: 10, offset: 6 } }, [\n              _c(\n                \"div\",\n                { staticClass: \"body_form\" },\n                [\n                  _c(\n                    \"el-form\",\n                    {\n                      ref: \"formData\",\n                      attrs: {\n                        \"label-position\": \"right\",\n                        \"label-width\": \"150px\",\n                        model: _vm.formData,\n                        rules: _vm.rules\n                      }\n                    },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"竞赛名称\", prop: \"compName\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { autocomplete: \"off\" },\n                            model: {\n                              value: _vm.formData.compName,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formData, \"compName\", $$v)\n                              },\n                              expression: \"formData.compName\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"主办单位\", prop: \"organizer\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { autocomplete: \"off\" },\n                            model: {\n                              value: _vm.formData.organizer,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formData, \"organizer\", $$v)\n                              },\n                              expression: \"formData.organizer\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"竞赛地点\", prop: \"place\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { autocomplete: \"off\" },\n                            model: {\n                              value: _vm.formData.place,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formData, \"place\", $$v)\n                              },\n                              expression: \"formData.place\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"所属学科\", prop: \"subjectType\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { autocomplete: \"off\" },\n                            model: {\n                              value: _vm.formData.subjectType,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formData, \"subjectType\", $$v)\n                              },\n                              expression: \"formData.subjectType\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: \"最多项目组\",\n                            prop: \"maxCountProject\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { type: \"age\", autocomplete: \"off\" },\n                            model: {\n                              value: _vm.formData.maxCountProject,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.formData,\n                                  \"maxCountProject\",\n                                  _vm._n($$v)\n                                )\n                              },\n                              expression: \"formData.maxCountProject\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: \"项目中老师最多人数\",\n                            prop: \"maxCountTeacher\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { type: \"age\", autocomplete: \"off\" },\n                            model: {\n                              value: _vm.formData.maxCountTeacher,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.formData,\n                                  \"maxCountTeacher\",\n                                  _vm._n($$v)\n                                )\n                              },\n                              expression: \"formData.maxCountTeacher\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: \"项目中学生最多人数\",\n                            prop: \"maxCountStudent\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { type: \"age\", autocomplete: \"off\" },\n                            model: {\n                              value: _vm.formData.maxCountStudent,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.formData,\n                                  \"maxCountStudent\",\n                                  _vm._n($$v)\n                                )\n                              },\n                              expression: \"formData.maxCountStudent\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: { label: \"竞赛时间\", prop: \"occurrenceTime\" }\n                        },\n                        [\n                          _c(\"el-date-picker\", {\n                            attrs: {\n                              type: \"date\",\n                              placeholder: \"选择日期\",\n                              \"value-format\": \"yyyy-MM-dd\",\n                              format: \"yyyy 年 MM 月 dd 日\",\n                              \"picker-options\": _vm.occurrenceTimeRule\n                            },\n                            model: {\n                              value: _vm.formData.occurrenceTime,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formData, \"occurrenceTime\", $$v)\n                              },\n                              expression: \"formData.occurrenceTime\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: { label: \"可申请时间\", prop: \"canApplyTime\" }\n                        },\n                        [\n                          _c(\"el-date-picker\", {\n                            attrs: {\n                              type: \"date\",\n                              placeholder: \"选择日期\",\n                              \"value-format\": \"yyyy-MM-dd\",\n                              format: \"yyyy 年 MM 月 dd 日\",\n                              \"picker-options\": _vm.canApplyTimeRule\n                            },\n                            model: {\n                              value: _vm.formData.canApplyTime,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formData, \"canApplyTime\", $$v)\n                              },\n                              expression: \"formData.canApplyTime\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: { label: \"截止申请时间\", prop: \"notApplyTime\" }\n                        },\n                        [\n                          _c(\"el-date-picker\", {\n                            attrs: {\n                              type: \"date\",\n                              placeholder: \"选择日期\",\n                              \"value-format\": \"yyyy-MM-dd\",\n                              format: \"yyyy 年 MM 月 dd 日\",\n                              \"picker-options\": _vm.notApplyTimeRule\n                            },\n                            model: {\n                              value: _vm.formData.notApplyTime,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formData, \"notApplyTime\", $$v)\n                              },\n                              expression: \"formData.notApplyTime\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"竞赛级别\", prop: \"level\" } },\n                        [\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: { placeholder: \"\" },\n                              model: {\n                                value: _vm.formData.level,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.formData, \"level\", $$v)\n                                },\n                                expression: \"formData.level\"\n                              }\n                            },\n                            [\n                              _c(\"el-option\", {\n                                attrs: { label: \"国家级\", value: \"0\" }\n                              }),\n                              _c(\"el-option\", {\n                                attrs: { label: \"省级\", value: \"1\" }\n                              }),\n                              _c(\"el-option\", {\n                                attrs: { label: \"校级\", value: \"2\" }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        {\n                          staticStyle: {\n                            \"margin-top\": \"30px\",\n                            \"margin-bottom\": \"30px\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"el-button\",\n                            {\n                              staticStyle: { float: \"left\", width: \"250px\" },\n                              attrs: { type: \"primary\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.applyCreateComp(\"formData\")\n                                }\n                              }\n                            },\n                            [_vm._v(\"申请添加比赛\")]\n                          ),\n                          _c(\n                            \"el-button\",\n                            {\n                              staticStyle: { float: \"right\" },\n                              on: {\n                                click: function($event) {\n                                  _vm.重置(\"formData\")\n                                }\n                              }\n                            },\n                            [_vm._v(\"重置\")]\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ])\n          ],\n          1\n        )\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}