{"remainingRequest":"D:\\IDEA_workspace2\\subject-vue\\node_modules\\thread-loader\\dist\\cjs.js!D:\\IDEA_workspace2\\subject-vue\\node_modules\\babel-loader\\lib\\index.js!D:\\IDEA_workspace2\\subject-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\IDEA_workspace2\\subject-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IDEA_workspace2\\subject-vue\\src\\views\\admin\\admin_xinxi.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IDEA_workspace2\\subject-vue\\src\\views\\admin\\admin_xinxi.vue","mtime":1620365893993},{"path":"D:\\IDEA_workspace2\\subject-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_workspace2\\subject-vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_workspace2\\subject-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\IDEA_workspace2\\subject-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IDEA_workspace2\\subject-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  inject: ['reload'],\n  name: \"college_xinxi\",\n  data: function data() {\n    return {\n      tabPosition: \"left\",\n      activeXinxiName: \"\",\n      xinxiTable: [],\n      receiver: this.$store.state.receiver\n    };\n  },\n  mounted: function mounted() {\n    this.activeXinxiName = \"消息列表\";\n  },\n  methods: {\n    getUnReadList: function getUnReadList() {\n      var that = this;\n      that.$axios.get(\"http://localhost:8089/msg/getUnReadList/\" + that.receiver).then(function (response) {\n        that.xinxiTable = response.data;\n      }).catch(function (error) {\n        that.$message.error(\"服务器错误，操作失败！\");\n        console.log(error);\n      });\n    },\n    getReadList: function getReadList() {\n      var that = this;\n      that.$axios.get(\"http://localhost:8089/msg/getReadList/\" + that.receiver).then(function (response) {\n        that.xinxiTable = response.data;\n      }).catch(function (error) {\n        that.$message.error(\"服务器错误，操作失败！\");\n        console.log(error);\n      });\n    },\n    remarkMsg: function remarkMsg(messageId) {\n      var that = this;\n      that.$axios.get(\"http://localhost:8089/msg/markMessage/\" + messageId).then(function (response) {\n        that.$message({\n          type: response.data.code == 200 ? 'success' : 'error',\n          message: response.data.message\n        });\n        that.getUnReadList();\n      }).catch(function (error) {\n        that.$message.error(\"服务器错误，操作失败！\");\n        console.log(error);\n      });\n    },\n    deleteMessage: function deleteMessage(messageId) {\n      var _this = this;\n\n      this.$confirm(\"此操作将永久删除该信息, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        var that = _this;\n        that.$axios.get(\"http://localhost:8089/msg/deleteMessage/\" + messageId).then(function (response) {\n          that.$message({\n            type: response.data.code == 200 ? 'success' : 'error',\n            message: response.data.message\n          });\n          that.getReadList();\n        }).catch(function (error) {\n          that.$message.error(\"服务器错误，操作失败！\");\n          console.log(error);\n        });\n      });\n    }\n  },\n  watch: {\n    activeXinxiName: function activeXinxiName(val, oldVal) {\n      var that = this;\n\n      if (that.activeXinxiName == \"消息列表\") {\n        that.getUnReadList();\n      } else if (that.activeXinxiName == \"已读\") {\n        that.getReadList();\n      }\n    }\n  },\n  filters: {\n    dataTime: function dataTime(value) {\n      if (value == undefined) return '-';\n      value = new Date(value);\n\n      if (value instanceof Date) {\n        var d = value;\n        var year = d.getFullYear();\n        var m = d.getMonth() + 1;\n        var day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate();\n        var myDate = year + '年' + m + '月 ' + day + '日';\n        return myDate;\n      } else {\n        return \"-\";\n      }\n    }\n  }\n};",{"version":3,"sources":["admin_xinxi.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"college_xinxi\">\r\n    <el-card>\r\n      <div slot=\"header\"></div>\r\n      <div>\r\n        <el-tabs v-model=\"activeXinxiName\" :tab-position=\"tabPosition\">\r\n          <el-tab-pane label=\"消息列表\" name=\"消息列表\">\r\n            <el-table border stripe :data=\"xinxiTable\" style=\"width: 100%\">\r\n              <el-table-column label=\"#\" width=\"60\">\r\n                <template slot-scope=\"scope\">{{scope.$index + 1}}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"title\" label=\"标题\"></el-table-column>\r\n              <el-table-column prop=\"content\" label=\"内容\"></el-table-column>\r\n              <el-table-column prop=\"sendName\" label=\"发送者\" ></el-table-column>\r\n              <el-table-column prop=\"sendUsername\" label=\"发送者用戶名\" ></el-table-column>\r\n              <el-table-column label=\"时间\" >\r\n                <template slot-scope=\"scope\">\r\n                  <i class=\"el-icon-time\"></i>\r\n                  <span style=\"margin-left: 10px\">{{ scope.row.date |dataTime}}</span>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"操作\" width=\"125\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button\r\n                          type=\"primary\"\r\n                          icon=\"el-icon-s-flag\"\r\n                          plain\r\n                          size=\"small\"\r\n                          @click=\"remarkMsg(scope.row.id)\"\r\n                  >标记已读</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"已读\" name=\"已读\">\r\n            <el-table border stripe :data=\"xinxiTable\" style=\"width: 100%\">\r\n              <el-table-column label=\"#\" width=\"60\">\r\n                <template slot-scope=\"scope\">{{scope.$index + 1}}</template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"title\" label=\"标题\"></el-table-column>\r\n              <el-table-column prop=\"content\" label=\"内容\"></el-table-column>\r\n              <el-table-column prop=\"sendName\" label=\"发送者\" ></el-table-column>\r\n              <el-table-column prop=\"sendUsername\" label=\"发送者用戶名\" ></el-table-column>\r\n              <el-table-column label=\"时间\" >\r\n                <template slot-scope=\"scope\">\r\n                  <i class=\"el-icon-time\"></i>\r\n                  <span style=\"margin-left: 10px\">{{ scope.row.date |dataTime}}</span>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"操作\" width=\"125\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button\r\n                          type=\"danger\"\r\n                          icon=\"el-icon-delete\"\r\n                          plain\r\n                          size=\"small\"\r\n                          @click=\"deleteMessage(scope.row.id)\"\r\n                  >删除信息</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    inject:['reload'],\r\n    name: \"college_xinxi\",\r\n    data() {\r\n      return {\r\n        tabPosition: \"left\",\r\n        activeXinxiName: \"\",\r\n        xinxiTable: [],\r\n        receiver:this.$store.state.receiver\r\n      };\r\n    },\r\n    mounted() {\r\n      this.activeXinxiName = \"消息列表\";\r\n    },\r\n    methods: {\r\n      getUnReadList() {\r\n        let that = this;\r\n        that.$axios\r\n        .get(\r\n            `http://localhost:8089/msg/getUnReadList/`+that.receiver\r\n        )\r\n        .then(function(response) {\r\n          that.xinxiTable = response.data;\r\n        })\r\n        .catch(function(error) {\r\n          that.$message.error(\"服务器错误，操作失败！\");\r\n          console.log(error);\r\n        });\r\n      },\r\n      getReadList() {\r\n        let that = this;\r\n        that.$axios\r\n        .get(\r\n            `http://localhost:8089/msg/getReadList/`+that.receiver\r\n        )\r\n        .then(function(response) {\r\n          that.xinxiTable = response.data;\r\n        })\r\n        .catch(function(error) {\r\n          that.$message.error(\"服务器错误，操作失败！\");\r\n          console.log(error);\r\n        });\r\n      },\r\n      remarkMsg(messageId) {\r\n        let that = this;\r\n        that.$axios\r\n        .get(`http://localhost:8089/msg/markMessage/`+messageId)\r\n        .then(function(response) {\r\n          that.$message({\r\n            type: response.data.code==200?'success':'error',\r\n            message: response.data.message\r\n          });\r\n          that.getUnReadList();\r\n        })\r\n        .catch(function(error) {\r\n          that.$message.error(\"服务器错误，操作失败！\");\r\n          console.log(error);\r\n        });\r\n      },\r\n      deleteMessage(messageId) {\r\n        this.$confirm(\"此操作将永久删除该信息, 是否继续?\", \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n        .then(() => {\r\n          let that = this;\r\n          that.$axios\r\n          .get(`http://localhost:8089/msg/deleteMessage/`+messageId)\r\n          .then(function(response) {\r\n            that.$message({\r\n              type: response.data.code==200?'success':'error',\r\n              message: response.data.message\r\n            });\r\n            that.getReadList();\r\n          })\r\n          .catch(function(error) {\r\n            that.$message.error(\"服务器错误，操作失败！\");\r\n            console.log(error);\r\n          });\r\n        })\r\n      }\r\n    },\r\n    watch: {\r\n      activeXinxiName(val, oldVal) {\r\n        let that = this;\r\n        if (that.activeXinxiName == \"消息列表\") {\r\n          that.getUnReadList();\r\n        } else if (that.activeXinxiName == \"已读\") {\r\n          that.getReadList();\r\n        }\r\n      }\r\n    },\r\n    filters:{\r\n      dataTime: function(value) {\r\n        if (value==undefined)\r\n          return '-';\r\n        value = new Date(value)\r\n        if (value instanceof Date) {\r\n          var d = value;\r\n          var year=d.getFullYear();\r\n          var m = d.getMonth() + 1;\r\n          var day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate();\r\n          var myDate = year + '年'+m + '月 ' + day +'日';\r\n          return myDate;\r\n        } else {\r\n          return \"-\";\r\n        }\r\n      }\r\n    }\r\n  };\r\n</script>"],"sourceRoot":"src/views/admin"}]}